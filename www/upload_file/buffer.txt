                                std::string     recv_str = "";
                                ssize_t         read_size = 0;

                                while (read_size >= 0)
                                {
                                        read_size = read(accfd[i], buf, sizeof(buf));
                                        if (read_size == -1)
                                        {
                                                std::cerr << "read() failed." << std::endl;
                                                close(accfd[i]);
                                                accfd[i] = -1;
                                                break ;
                                        }
                                        else if (read_size > 0)
                                                recv_str.append(buf);
                                        else if (read_size == 0)
                                                break ;
                                        if ((recv_str[recv_str.length() - 4] == 0x0d) &&
                                                (recv_str[recv_str.length() - 3] == 0x0a) &&
                                                (recv_str[recv_str.length() - 2] == 0x0d) &&
                                                (recv_str[recv_str.length() - 1] == 0x0a))
                                                break ;
                                }
                                if (read_size == -1)
                                        break ;

                                RequestParser   request(recv_str);
                                Response                response(request);
                                std::string             response_str = response.get_header() + response.get_body();
                                ssize_t                 write_size = 0;

                                while (write_size >=0)
                                {
                                        write_size += write(accfd[i], response_str.c_str(),
                                                                        response_str.length());
                                        if (write_size == (long)response_str.length())
                                                break ;
                                        else if (write_size == -1)
                                        {
                                                std::cerr << "write() failed." << std::endl;
                                                break ;
                                        }
                                }
                                close(accfd[i]);
                                accfd[i] = -1;
                        }
                }
        }
        close(sock.get_listenfd());
        return (0);
}%
r_tomishi@RyotanoiMac ~ % tmux show-buffer
close(accfd[i]);%
r_tomishi@RyotanoiMac ~ %
